package as.pw.candee.module.exploit;
import as.pw.candee.CandeePlusRewrite;
import as.pw.candee.module.Module;
import as.pw.candee.module.combat.CevBreaker;
import as.pw.candee.module.combat.CivBreaker;
import as.pw.candee.module.combat.PistonAura;
import as.pw.candee.setting.Setting;
import as.pw.candee.utils.InventoryUtil;
import as.pw.candee.utils.Timer;
import net.minecraft.init.Items;
import net.minecraft.network.play.client.CPacketHeldItemChange;
import net.minecraft.util.EnumHand;
public class SilentPickel extends Module {
        public final Setting<Float> delay;
        public final Setting<Boolean> noGap;
        public final Setting<Boolean> noPA;
        public Timer timer;
        public int oldslot;
        public EnumHand oldhand;
        public SilentPickel() {
                super("SilentPickel", Categories.EXPLOIT, false, false);
                this.delay = register(new Setting("Delay", 3.0F, 25.0F, 0.0F));
                this.noGap = register(new Setting("NoGapSwitch", Boolean.TRUE));
                this.noPA = register(new Setting("NoPASwitch", Boolean.TRUE));
                this.oldslot = -1;
                this.oldhand = null;
        }
        public void onEnable() {
                this.timer = new Timer();
        }
        public void onUpdate() {
                if (nullCheck()) {
                        return;
                }
                int pickel = InventoryUtil.getItemHotbar(Items.DIAMOND_PICKAXE);
                if (pickel == -1) {
                        return;
                }
                if (mc.player.inventory.getCurrentItem().getItem() == Items.GOLDEN_APPLE && this.noGap.getValue()) {
                        return;
                }
                Module pa = CandeePlusRewrite.m_module.getModuleWithClass(PistonAura.class);
                if (pa.isEnable && this.noPA.getValue()) {
                        return;
                }
                Module cev = CandeePlusRewrite.m_module.getModuleWithClass(CevBreaker.class);
                Module civ = CandeePlusRewrite.m_module.getModuleWithClass(CivBreaker.class);
                if (cev.isEnable || civ.isEnable) {
                        return;
                }
                if (InstantMine.FourZeroFourBlock != null) {
                        if (mc.player.inventory.getCurrentItem().getItem() != Items.DIAMOND_PICKAXE) {
                                setItem(pickel);
                        }
                        InstantMine mine = (InstantMine) CandeePlusRewrite.m_module.getModuleWithClass(InstantMine.class);
                        mine.update();
                        restoreItem();
                }
        }
        public void setItem(int slot) {
                this.oldhand = null;
                if (mc.player.isHandActive()) {
                        this.oldhand = mc.player.getActiveHand();
                }
                this.oldslot = mc.player.inventory.currentItem;
                mc.player.connection.sendPacket(new CPacketHeldItemChange(slot));
        }
        public void restoreItem() {
                if (this.oldslot != -1) {
                        if (this.oldhand != null) {
                                mc.player.setActiveHand(this.oldhand);
                        }
                        mc.player.connection.sendPacket(new CPacketHeldItemChange(this.oldslot));
                        this.oldslot = -1;
                        this.oldhand = null;
                }
        }
}