package as.pw.candee.module.exploit;
import as.pw.candee.event.events.network.PacketEvent;
import as.pw.candee.module.Module;
import as.pw.candee.setting.Setting;
import net.minecraft.entity.Entity;
import net.minecraft.init.SoundEvents;
import net.minecraft.network.Packet;
import net.minecraft.network.play.server.SPacketSoundEffect;
import net.minecraft.util.SoundCategory;
import net.minecraftforge.fml.common.eventhandler.EventPriority;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
public class PingBypass
        extends Module
{
        public final Setting<Boolean> ping;
        public final Setting<Boolean> animation;
        public final Setting<Boolean> sign;
        public final Setting<Boolean> crystal;
        public final Setting<Boolean> remove;
        public PingBypass() {
                super("PingBypass", Categories.EXPLOIT, false, false);
                this.ping = register(new Setting("Ping", Boolean.TRUE));
                this.animation = register(new Setting("Animation", Boolean.TRUE));
                this.sign = register(new Setting("Sign", Boolean.TRUE));
                this.crystal = register(new Setting("Crystal", Boolean.TRUE));
                this.remove = register(new Setting("Remove", Boolean.TRUE, v -> this.crystal.getValue()));
        }
        @SubscribeEvent(priority = EventPriority.HIGH)
        public void onPacketSend(PacketEvent.Send event) {
                if (!this.isEnable) {
                        return;
                }
                Packet packet = event.getPacket();
                if (packet instanceof net.minecraft.network.status.client.CPacketPing && this.ping.getValue()) {
                        event.cancel();
                }
                if (packet instanceof net.minecraft.network.play.client.CPacketAnimation && this.animation.getValue()) {
                        event.cancel();
                }
                if (packet instanceof net.minecraft.network.play.client.CPacketUpdateSign && this.sign.getValue()) {
                        event.cancel();
                }
        }
        @SubscribeEvent(priority = EventPriority.HIGH)
        public void onPacketReceive(PacketEvent.Receive event) {
                if (!this.isEnable) {
                        return;
                }
                if (this.crystal.getValue() && event.getPacket() instanceof SPacketSoundEffect && ((SPacketSoundEffect)event.getPacket()).getCategory() == SoundCategory.BLOCKS && ((SPacketSoundEffect)event.getPacket()).getSound() == SoundEvents.ENTITY_GENERIC_EXPLODE)
                        for (Entity crystal : mc.world.loadedEntityList) {
                                if (crystal instanceof net.minecraft.entity.item.EntityEnderCrystal) {
                                        if (this.remove.getValue()) {
                                                mc.world.removeEntityFromWorld(crystal.getEntityId());
                                                continue;
                                        }
                                        crystal.setDead();
                                }
                        }
        }
}